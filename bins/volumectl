#!/bin/bash

set -e
#set -x

display_help() {
    echo "usage:"
    echo "  volumectl app <app> up"
    echo "  volumectl app <app> down"
    echo "  volumectl app <app> get"
    echo "  volumectl system up"
    echo "  volumectl system down"
    echo "  volumectl help"
}

function system_volume() {
    OPERATION=$1

    CURRENT_VOLUME=$(wpctl get-volume @DEFAULT_SINK@ | cut -d ':' -f 2 | cut -d '.' -f 2)

    CONFIG_FILE=~/.config/volumectl/config

    if [ $# -eq 3 ]; then
        CONFIG_FILE=$2
    fi

    VOLUME_TO_SET=$(stepper $OPERATION $CURRENT_VOLUME $CONFIG_FILE)

    wpctl set-volume @DEFAULT_SINK@ "${VOLUME_TO_SET}%"
}

function app_volume() {
    if [ $# -lt 2 ]; then
        echo "must supply <app> <direction>"
        echo "  where <app> is the name of the pulse app to control"
        echo "  and <direction> is 'up' or 'down'"
        exit
    fi

    APP_NAME=$1
    DIRECTION=$2

    VOLUME_AMOUNT="4"
    if [ $# -eq 3 ]; then
        VOLUME_AMOUNT=$3
    fi

    if [ $DIRECTION == "get" ]; then

        CLIENT_ID=$(pw-dump | jq ".[] | select(.type == \"PipeWire:Interface:Node\") | select(.info.props.\"application.name\" != null) | select(.info.props.\"application.name\" | contains(\"${APP_NAME}\")) | .id")

        CURRENT_VOLUME=$(wpctl get-volume ${CLIENT_ID} | cut -d ':' -f 2 | cut -d '.' -f 2)

        echo "${CURRENT_VOLUME}%"

        exit

    else
        if [ $DIRECTION == "up" ]; then
            VOLUME_CHANGE="${VOLUME_AMOUNT}%+"

        elif [ $DIRECTION == "down" ]; then
            VOLUME_CHANGE="${VOLUME_AMOUNT}%-"

        else
            echo "<direction> must be 'up' or 'down'"
            display_help
            exit
        fi
    fi

    CLIENT_ID=$(pw-dump | jq ".[] | select(.type == \"PipeWire:Interface:Node\") | select(.info.props.\"application.name\" != null) | select(.info.props.\"application.name\" | contains(\"${APP_NAME}\")) | .id")

    wpctl set-volume ${CLIENT_ID} "${VOLUME_CHANGE}"

    pkill -SIGRTMIN+5 i3status-rs
}

main() {
    if [ $# -lt 1 ]; then
        display_help
        exit
    fi

    COMMAND=$1

    shift

    if [ ${COMMAND} == "app" ]; then
        app_volume $@

    elif [ ${COMMAND} == "system" ]; then
        system_volume $@

    elif [ ${COMMAND} == "help" ] || [ ${COMMAND} == "-h" ] || [ ${COMMAND} == "--help" ]; then
        display_help
        exit

    else
        display_help
        exit
    fi
}

main $@
