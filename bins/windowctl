#!/bin/bash

display_help() {
    echo "usage:"
    echo "  windowctl fit-to-width"
    echo "  windowctl fit-to-height"
    echo "  windowctl resize-to-original"
    echo "  windowctl toggle-sticky"
    echo "  windowctl help"
}

fit_to_width() {
    swaymsg resize set width 100ppt
    swaymsg move position center
}

fit_to_height() {
    swaymsg resize set height 100ppt
    swaymsg move position center
}

toggle_sticky() {
    swaymsg sticky toggle
}

resize_to_original() {
    TREE_JSON=$(swaymsg -t get_tree)

    ACTIVE_WINDOW_JSON=$(echo ${TREE_JSON} | jq -j '.. | select(.type?) | select(.focused)')

    NEW_WIDTH=$(echo ${ACTIVE_WINDOW_JSON} | jq '.geometry.width')
    NEW_HEIGHT=$(echo ${ACTIVE_WINDOW_JSON} | jq '.geometry.height')

    swaymsg resize set width "${NEW_WIDTH} px" height "${NEW_HEIGHT} px"
    swaymsg move position center
}

split_workspace() {
    WORKSPACE_ID=$(niri msg --json workspaces | jq '.[] | select(.is_active == true).id')

    WINDOW_IDS=$(niri msg --json windows | jq ".[] | select(.workspace_id == ${WORKSPACE_ID}).id")

    LEN=$(echo ${WINDOW_IDS} | wc -w)

    PERCENT=$(echo ${LEN} | python -c 'import sys; print(100.0 / float(sys.stdin.read().strip()))')

    for ID in ${WINDOW_IDS}; do
        niri msg action set-window-width --id ${ID} "${PERCENT}%"
    done
}

main() {
    if [ $# -lt 1 ]; then
        display_help
        exit
    fi

    if [ $1 == "fit-to-width" ]; then
        fit_to_width
    elif [ $1 == "fit-to-height" ]; then
        fit_to_height
    elif [ $1 == "toggle-sticky" ]; then
        toggle_sticky
    elif [ $1 == "resize-to-original" ]; then
        resize_to_original
    elif [ $1 == "split-workspace" ]; then
        split_workspace
    else
        display_help
    fi
}

main $@
