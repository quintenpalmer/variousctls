#!/bin/bash

resolver() {
    ACTIVE_WINDOW=$1

    ACTIVE_WINDOW_APP_ID=$(echo ${ACTIVE_WINDOW} | jq '.app_id')
    echo "active window app id:"
    echo ${ACTIVE_WINDOW_APP_ID}

    if [[ "${ACTIVE_WINDOW_APP_ID}" == '"Alacritty"' ]]; then
        PARENT_PID=$(echo ${ACTIVE_WINDOW} | jq '.pid')
        echo "parent pid:"
        echo ${PARENT_PID}

        CHILD_PID=$(pgrep -P ${PARENT_PID})
        echo "child pid:"
        echo ${CHILD_PID}

        if [[ ${CHILD_PID} != "" ]]; then
            DIRTY_CHILD_CWD=$(pwdx ${CHILD_PID} | cut -d : -f 2)
            echo "dirty child pid:"
            echo ${DIRTY_CHILD_CWD}

            CLEAN_CHILD_CWD=$(echo ${DIRTY_CHILD_CWD} | xargs)
            echo "clean child pid:"
            echo ${CLEAN_CHILD_CWD}

            alacritty --working-directory "${CLEAN_CHILD_CWD}"
        else
            echo "no child pid"
            alacritty
        fi
    else
        echo "no active window app id"
        alacritty
    fi
}

niri_alacritty() {
    TREE=$(niri msg --json focused-window)

    resolver "${TREE}"
}

sway_alacritty() {
    set -x
    TREE=$(swaymsg -t get_tree)
    #echo ${TREE}

    # old copy-paste from github
    #ACTIVE_WINDOW=$(echo ${TREE} | jq 'recurse(.nodes[]) | select(.focused == true)')
    # new copy-paste from my screenshot tool
    ACTIVE_WINDOW=$(echo ${TREE} | jq -j '.. | select(.type?) | select(.focused)')
    echo "active window:"
    echo ${ACTIVE_WINDOW}

    resolver "${ACTIVE_WINDOW}"
}

if [[ -n "${SWAYSOCK}" ]]; then
    sway_alacritty
elif [[ -n "${NIRI_SOCKET}" ]]; then
    niri_alacritty
else
    echo "no known window manager"
    alacritty
fi
