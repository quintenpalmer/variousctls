#!/bin/bash

set -e

display_help() {
    echo "usage:"
    echo "  amdpower set          <ryzen|cpu>   <powersave|performance>"
    echo "                        <radeon|gpu>  <powersave|performance>"
    echo "                        <sys|system>  <powersave|performance>"
    echo "                        all           <powersave|performance>"
    echo "  amdpower get          <radeon|gpu>"
    echo "                        <ryzen|cpu>"
    echo "                        <sys|system>"
    echo "                        all"
    echo "  amdpower help"
}

cpu() {
    if [ $# -lt 1 ]; then
        echo "must supply <ryzen|cpu> <powersave|performance>"
        exit
    fi

    POWERMODE=$1

    if [ ${POWERMODE} == "performance" ]; then
        echo "prompting to set energy_performance_preference to performance"
        echo 'performance' | doas tee /sys/devices/system/cpu/cpu*/cpufreq/energy_performance_preference
        #for cpu_energy_performance in $(ls /sys/devices/system/cpu/cpu*/cpufreq/energy_performance_preference); do
        #    echo 'performance' | doas tee ${cpu_energy_performance}
        #done

        echo "prompting to set scaling_governor to performance"
        echo 'performance' | doas tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
        #for cpu_scaling_governor in $(ls /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor); do
        #    echo 'performance' | doas tee ${cpu_scaling_governor}
        #done

    elif [ ${POWERMODE} == "powersave" ]; then
        echo "prompting to set energy_performance_preference to power"
        echo 'power' | doas tee /sys/devices/system/cpu/cpu*/cpufreq/energy_performance_preference
        #for cpu_energy_performance in $(ls /sys/devices/system/cpu/cpu*/cpufreq/energy_performance_preference); do
        #    echo 'power' | doas tee ${cpu_energy_performance}
        #done

        echo "prompting to set scaling_governor to powersave"
        echo 'powersave' | doas tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
        #for cpu_scaling_governor in $(ls /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor); do
        #    echo 'powersave' | doas tee ${cpu_scaling_governor}
        #done

    else
        display_help
        exit

    fi

    get cpu
}

gpu() {
    if [ $# -lt 1 ]; then
        echo "must supply <radeon|gpu> <powersave|performance>"
        exit
    fi

    POWERMODE=$1

    if [ ${POWERMODE} == "performance" ]; then
        echo 'auto' | doas tee /sys/class/drm/card1/device/power_dpm_force_performance_level

    elif [ ${POWERMODE} == "powersave" ]; then
        echo 'low' | doas tee /sys/class/drm/card1/device/power_dpm_force_performance_level

    else
        display_help
        exit

    fi

    get gpu
}

system() {
    if [ $# -lt 1 ]; then
        echo "must supply <radeon|gpu> <powersave|performance>"
        exit
    fi

    POWERMODE=$1

    if [ ${POWERMODE} == "performance" ]; then
        echo "prompting to set i2c devices to performance"
        echo on | doas tee /sys/bus/i2c/devices/*/device/power/control
        echo "prompting to set pci devices to performance"
        echo on | doas tee /sys/bus/pci/devices/*/power/control

    elif [ ${POWERMODE} == "powersave" ]; then
        echo "prompting to set i2c devices to powersave"
        echo auto | doas tee /sys/bus/i2c/devices/*/device/power/control
        echo "prompting to set pci devices to powersave"
        echo auto | doas tee /sys/bus/pci/devices/*/power/control

    else
        display_help
        exit

    fi

    get sys
}

setsetting() {
    if [ $# -lt 2 ]; then
        echo "must supply set <gpu|radeon|cpu|ryzen|all> <powersave|performance>"
        exit
    fi

    SYSTEMTOSET=$1

    shift

    if [ ${SYSTEMTOSET} == "cpu" ] || [ ${SYSTEMTOSET} == "ryzen" ]; then
        cpu $@

    elif [ ${SYSTEMTOSET} == "gpu" ] || [ ${SYSTEMTOSET} == "radeon" ]; then
        gpu $@

    elif [ ${SYSTEMTOSET} == "sys" ] || [ ${SYSTEMTOSET} == "system" ]; then
        system $@

    elif [ ${SYSTEMTOSET} == "all" ]; then
        cpu $@
        gpu $@
        system $@

    else
        echo "must supply set with first argument of <gpu|radeon|cpu|ryzen|all>"
        display_help
        exit

    fi
}

get() {
    if [ $# -lt 1 ]; then
        echo "must supply get <gpu|radeon|cpu|ryzen>"
        exit
    fi

    SYSTEMTOGET=$1

    if [ ${SYSTEMTOGET} == "all" ]; then
        get cpu
        get gpu
        get sys

    elif [ ${SYSTEMTOGET} == "cpu" ] || [ ${SYSTEMTOGET} == "ryzen" ]; then
        echo "CPU status"
        bat /sys/devices/system/cpu/cpu0/cpufreq/energy_performance_preference
        bat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor

    elif [ ${SYSTEMTOGET} == "gpu" ] || [ ${SYSTEMTOGET} == "radeon" ]; then
        echo "GPU status"
        bat /sys/class/drm/card1/device/power_dpm_force_performance_level

    elif [ ${SYSTEMTOGET} == "sys" ] || [ ${SYSTEMTOGET} == "system" ]; then
        echo "System status"
        bat --style header-filename /sys/bus/pci/devices/*/power/control
        bat --style header-filename /sys/bus/i2c/devices/*/device/power/control

    else
        echo "must supply one of 'gpu', 'cpu', or 'all' to <get>"
        display_help
        exit

    fi

}

main() {
    if [ $# -lt 1 ]; then
        display_help
        exit
    fi

    COMMAND=$1

    shift

    if [ ${COMMAND} == "set" ]; then
        setsetting $@

    elif [ ${COMMAND} == "get" ]; then
        get $@

    elif [ ${COMMAND} == "help" ] || [ ${COMMAND} == "-h" ] || [ ${COMMAND} == "--help" ]; then
        display_help
        exit

    else
        echo "unknown command: '${COMMAND}'"
        display_help
        exit
    fi
}

main $@
